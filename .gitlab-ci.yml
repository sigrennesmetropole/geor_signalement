# Pipeline variables
variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=.m2/repository --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache policy - Share target folders between jobs - Note that key is related to a commit and is purged automatically after pipeline execution
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - $CI_PROJECT_DIR/.m2/repository/**/*
    - $CI_PROJECT_DIR/**/target/**/*

default:
  image: maven:3.6.0-jdk-11
  before_script:
    - apt update && apt install -y gettext-base
    - envsubst '${MVN_GROUP} ${MVN_RELEASE} ${MVN_SNAPSHOTS}' < pom.xml > pom.subst && mv -f pom.subst pom.xml

# Stages definition
stages:
  - build
  - test

# Build job with maven plugin execution policies define in parent pom
sbapi:build:
  script:
    - sh ./mvnw $MAVEN_CLI_OPTS -U package
  stage: build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/georchestra-signalements-api/target/georchestra-signalements-api-*.jar

# Sonar code quality analysis - note a full test coverage report through a jacoco.exec merged file in base project folder
sbapi:sonar:
  stage: test
  dependencies:
    - sbapi:build
  except:
    refs:
      - master
  script:
    - >
      sh ./mvnw $MAVEN_CLI_OPTS -U compile sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME

# On master, do not use branch parameter
sbapi:sonar:master:
  stage: test
  dependencies:
    - sbapi:build
  only:
    refs:
      - master
  script:
    - >
      sh ./mvnw $MAVEN_CLI_OPTS -U compile sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
