<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>georchestra-signalement-backend</artifactId>
		<groupId>org.georchestra</groupId>
		<version>1.1-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>georchestra-signalement-api</artifactId>
	<packaging>jar</packaging>
	<properties>
		<finalName>signalement</finalName>
		<mapstore-georchestra>target/github-mapstore2-georchestra</mapstore-georchestra>
		<angular.project.nodeinstallation>node_installation</angular.project.nodeinstallation>
	</properties>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>georchestra-signalement-service</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-cas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
		</dependency>

		<!-- Server Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- Swagger UI dependency -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<!-- Swagger 2 doc dependency -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Activiti -->
		<!-- https://mvnrepository.com/artifact/org.activiti/activiti-engine -->
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-engine</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.activiti/activiti-spring -->
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.activiti/activiti-spring-conformance-util -->
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring-conformance-util</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.activiti/activiti-spring-boot-starter -->
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- install node, npm en run command -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<workingDirectory>${mapstore-georchestra}</workingDirectory>
					<installDirectory>${angular.project.nodeinstallation}</installDirectory>
				</configuration>
				<executions>
					<!-- It will install nodejs and npm -->
					<execution>
						<phase>generate-resources</phase>
						<id>install-node-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.16.3</nodeVersion>
							<npmVersion>6.14.4</npmVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Swagger -->
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<configuration>
					<!-- Les interfaces sont généres dans la target, c'est normal -->
					<apiPackage>org.georchestra.signalement.api</apiPackage>
					<modelPackage>org.georchestra.signalement.core.dto</modelPackage>
					<inputSpec>resources/swagger/georchestra-signalement.json</inputSpec>
					<language>spring</language>
					<library>spring-mvc</library>
					<generateModelTests>false</generateModelTests>
					<generateModelDocumentation>false</generateModelDocumentation>
					<generateSupportingFiles>false</generateSupportingFiles>
					<generateApiDocumentation>false</generateApiDocumentation>
					<generateApis>true</generateApis>
					<generateModels>false</generateModels>
					<configOptions>
						<!-- Activier le 'interfaceOnly' à true pour la compile, sinon conflit, 
							et à false pour la génération -->
						<interfaceOnly>true</interfaceOnly>
						<!--<skipOverwrite>true</skipOverwrite> -->
					</configOptions>
					<templateDirectory>${project.basedir}/src/conf/generation/</templateDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- recurse git clone for mapstore2-georchestra if needed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>check-git-exists</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target name="check">
								<taskdef
									resource="net/sf/antcontrib/antcontrib.properties" />
								<if>
									<available file="${mapstore-georchestra}" />
									<then>
										<echo message="git mapstore2-georchestra repo is present" />
										<property name="clone.NotRequired" value="true" />
										<echo message="clone.NotRequired=${clone.NotRequired}" />
									</then>
									<else>
										<echo
											message="git mapstore2-georchestra repo is not present" />
										<property name="clone.NotRequired" value="false" />
									</else>
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>github-mapstore2-georchestra</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${clone.NotRequired}</skip>
							<executable>git</executable>
							<arguments>
								<argument>clone</argument>
								<argument>--recursive</argument>
								<argument>-b</argument>
								<argument>master</argument>
								<argument>https://github.com/georchestra/mapstore2-georchestra.git</argument>
								<argument>${mapstore-georchestra}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- modify package.json for windows system -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>windowsify-package-json</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="replace">
								<taskdef
									resource="net/sf/antcontrib/antcontrib.properties" />
								<if>
									<os family="unix" />
									<then>
										<echo message="windowsify package.json not needed" />
									</then>
									<else>
										<echo message="windowsify package.json needed" />
										<replaceregexp
											file="${mapstore-georchestra}/package.json"
											match="&amp;&amp; cp -r .*" replace="&quot;," byline="true" />
									</else>
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>

			<!-- JAR executable Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>a-jar</id>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>

			<!-- War Spring Boot -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>a-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>
								WEB-INF/lib/mapstruct-1.2.0.Final.jar,
								WEB-INF/lib/jcl-over-slf4j-1.7.29.jar,
								WEB-INF/lib/spring-boot-devtools-2.1.10.RELEASE.jar,
								%regex[WEB-INF/lib/spring.*-test-.*\.jar]
							</packagingExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- WAR with final name -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>b-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>
								WEB-INF/lib/mapstruct-1.2.0.Final.jar,
								WEB-INF/lib/jcl-over-slf4j-1.7.29.jar,
								WEB-INF/lib/spring-boot-devtools-2.1.10.RELEASE.jar,
								%regex[WEB-INF/lib/spring.*-test-.*\.jar]
							</packagingExcludes>
							<warName>${finalName}</warName>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mapfishapp-signalement</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>mapfish-addon/addon-assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mapstore-signalement</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>build-mapstore-signalement</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="clean-mapstore-signalement-plugin">
										<delete
											dir="${mapstore-georchestra}/build/extensions/plugins" />
										<delete
											dir="${mapstore-georchestra}/build/extensions/bundle" />
										<delete
											file="${mapstore-georchestra}/build/extensions/extensions.js" />
									</target>
									<target name="copy-mapstore-signalement-plugin">
										<echo message="${mapstore-georchestra}/build/extensions" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-addon/js/plugins/SignalementExtension.jsx" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-addon/app.jsx" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-addon/extensions.js" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-addon/prod-webpack.config.js" />
										<copy todir="${mapstore-georchestra}/build/signalement">
											<fileset dir="../mapstore-addon/js/signalement">
												<include name="**/*.js*" />
												<include name="**/*.cs*" />
											</fileset>
										</copy>
										<copy
											todir="${mapstore-georchestra}/build/extensions/bundle">
											<fileset dir="../mapstore-addon/bundle">
												<filename name="**/*.json" />
											</fileset>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<workingDirectory>${mapstore-georchestra}</workingDirectory>
							<installDirectory>${angular.project.nodeinstallation}</installDirectory>
						</configuration>
						<executions>
							<execution>
								<id>npm-install</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm-build-extension</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build-extension</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>build-mapstore-signalement-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="build-mapstore-signalement-plugin-zip">
										<copy
											todir="${mapstore-georchestra}/build/extensions/bundle"
											file="${mapstore-georchestra}/build/extensions/dist/extensions/extension.js" />
										<zip destfile="target/mapstore-signalement-plugin.zip"
											basedir="${mapstore-georchestra}/build/extensions/bundle" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mapstore-signalement-management</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>build-mapstore-signalement</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target
										name="cleane-mapstore-signalement-management-plugin">
										<delete
											dir="${mapstore-georchestra}/build/extensions/plugins" />
										<delete
											dir="${mapstore-georchestra}/build/extensions/bundle" />
										<delete
											file="${mapstore-georchestra}/build/extensions/extensions.js" />
									</target>
									<target
										name="copy-mapstore-signalement-management-plugin">
										<echo message="${mapstore-georchestra}/build/extensions" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-management-addon/js/plugins/SignalementManagementExtension.jsx"
											overwrite="true" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-management-addon/app.jsx" overwrite="true" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-management-addon/extensions.js"
											overwrite="true" />
										<copy todir="${mapstore-georchestra}/build/extensions"
											file="../mapstore-management-addon/prod-webpack.config.js"
											overwrite="true" />
										<copy
											todir="${mapstore-georchestra}/build/signalement-management"
											overwrite="true">
											<fileset
												dir="../mapstore-management-addon/js/signalement-management">
												<include name="**/*.js*" />
												<include name="**/*.cs*" />
											</fileset>
										</copy>
										<copy
											todir="${mapstore-georchestra}/build/extensions/bundle"
											overwrite="true">
											<fileset dir="../mapstore-management-addon/bundle">
												<filename name="**/*.json" />
											</fileset>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<workingDirectory>${mapstore-georchestra}</workingDirectory>
							<installDirectory>${angular.project.nodeinstallation}</installDirectory>
						</configuration>
						<executions>
							<execution>
								<id>npm-install</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<!-- <execution> <id>npm-run-compile</id> <phase>package</phase> <goals> 
								<goal>npm</goal> </goals> <configuration> <arguments>run compile</arguments> 
								</configuration> </execution> -->
							<execution>
								<id>npm-build-extension</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build-extension</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>build-mapstore-signalement-management-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target
										name="build-mapstore-signalement-management-plugin-zip">
										<copy
											todir="${mapstore-georchestra}/build/extensions/bundle"
											file="${mapstore-georchestra}/build/extensions/dist/extensions/extension.js" />
										<zip
											destfile="target/mapstore-signalement-management-plugin.zip"
											basedir="${mapstore-georchestra}/build/extensions/bundle" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<properties>
				<packageDatadirScmVersion>master</packageDatadirScmVersion>
				<dockerImageName>sigrennesmetropole/geor_signalement</dockerImageName>
				<dockerDatadirScmUrl>scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
				<dockerDatadirScmVersion>docker-${packageDatadirScmVersion}</dockerDatadirScmVersion>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.2.2</version>
						<dependencies>
							<dependency>
								<groupId>com.google.guava</groupId>
								<artifactId>guava</artifactId>
								<version>28.2-jre</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<imageName>${dockerImageName}</imageName>
							<imageTags>
								<imageTag>${project.version}</imageTag>
								<imageTag>latest</imageTag>
							</imageTags>
							<!-- chemin relatif depuis le target du présent projet -->
							<dockerDirectory>${project.basedir}/../docker/signalement-backend</dockerDirectory>

							<!-- copy the service's jar file from target into the root directory 
								of the image -->
							<resources>
								<resource>
									<targetPath>/var/lib/jetty/webapps/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${finalName}.war</include>
								</resource>
								<!-- <resource> <targetPath>/etc/georchestra</targetPath> <directory>${project.build.directory}/datadir</directory> 
									<include>${project.artifactId}/**</include> </resource> -->
							</resources>
							<!-- This will require to set up the docker-hub credentials correctly 
								into your ~/.m2/settings.xml, see: https://github.com/spotify/docker-maven-plugin#authenticating-with-private-registries -->
							<serverId>docker-hub</serverId>
							<registryUrl>https://index.docker.io/v1/</registryUrl>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>deploy-mapfish-addon</id>
								<phase>package</phase>
								<configuration>
									<target name="copy mapfish-addon to georchestra">
										<copy todir="${georchestra.mapfish-addon.deployDir}">
											<fileset dir="../mapfish-addon/">
												<exclude name="**/addon-assembly.xml" />
											</fileset>
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev-yri</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>deploy-mapfish-addon</id>
								<phase>package</phase>
								<configuration>
									<target name="copy mapfish-addon to georchestra">
										<copy todir="${georchestra.mapfish-addon.deployDir}">
											<fileset dir="../mapfish-addon/">
												<exclude name="**/addon-assembly.xml" />
											</fileset>
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
