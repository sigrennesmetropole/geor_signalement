{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "Georchestra - Plugin Signalement API",
		"contact": {
			"email": "guillaume.morin@open-groupe.com"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "",
	"basePath": "/signalement",
	"tags": [
		{
			"name": "administration",
			"description": "Administration de la plateforme de signalement"
		},
		{
			"name": "user",
			"description": "Services de gestion des utilisateurs"
		},
		{
			"name": "tasks",
			"description": "Services de gestion des tâches de signalements"
		},
		{
			"name": "reporting",
			"description": "Services de gestion des signalements"
		},
		{
			"name": "contextDescriptions",
			"description": "Services de gestion des définitions de contexte"
		},
		{
			"name": "roles",
			"description": "Services de gestion des rôles"
		},
		{
			"name": "geographicAreas",
			"description": "Services de gestion des zones géographiques"
		},
		{
			"name": "userRoleContext",
			"description": "Services de gestion des opérateurs"
		}
	],
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/administration/configuration": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "Récupération des propriétés de configuration",
				"description": "Ensemble des propriétés de configuration",
				"operationId": "getConfiguration",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConfigurationData"
						}
					}
				}
			}
		},
		"/administration/initialize": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "Initialisation applicatives",
				"description": "Initialisation applicatives",
				"operationId": "initialize",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/administration/processDefinition/update/{deploymentName}": {
			"post": {
				"tags": [
					"administration"
				],
				"summary": "Update process definition",
				"description": "Update process definition",
				"operationId": "updateProcessDefinition",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "deploymentName",
						"description": "Nom de la ressource de déploiement (la catégorie du déploiement sera le nom suffixé par _catergory)",
						"required": true,
						"type": "string"
					},
					{
						"in": "formData",
						"name": "file",
						"description": "Pièce jointe contenant le fichierbpmn2.0 sous la forme d'un blob",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/administration/processDefinition/delete/{name}": {
			"delete": {
				"tags": [
					"administration"
				],
				"summary": "Delete process definition",
				"description": "Delete process definition",
				"operationId": "deleteProcessDefinition",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"description": "Nom du processus",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "version",
						"description": "Version du processus",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/administration/processDefinition/search": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "List process definition",
				"description": "List process definition",
				"operationId": "searchProcessDefinition",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcessDefinition"
							}
						}
					}
				}
			}
		},
		"/styles": {
			"get": {
				"tags": [
					"styles"
				],
				"summary": "Recherche de la liste des style.",
				"description": "Récupération de la liste des styles disponibles qui respectent les filtres.",
				"operationId": "searchStyles",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer",
						"default": 0
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer",
						"default": 10
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/StylePageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"put": {
				"tags": [
					"styles"
				],
				"summary": "Mise à jour d'un style.",
				"description": "Mise à jour d' un style tel que stipulée dans le body de la requête, en fonction de l'id du style",
				"operationId": "updateStyle",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "style",
						"description": "Le nouveau stylé à appliquer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/StyleContainer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/StyleContainer"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},

			"post": {
			"tags": [
				"styles"
			],
			"summary": "Création d'un style",
			"description": "",
			"operationId": "createStyle",
			"produces": [
				"application/json"
			],
			"parameters": [
				{
					"in": "body",
					"name": "style",
					"description": "Description du style",
					"required": true,
					"schema": {
						"$ref": "#/definitions/StyleContainer"
					}
				}
			],
			"responses": {
				"200": {
					"description": "OK",
					"schema": {
						"$ref": "#/definitions/StyleContainer"
					}
				},
				"400": {
					"description": "Bad input parameter"
				},
				"500": {
					"description": "Internal server error",
					"schema": {
						"$ref": "#/definitions/ApiError"
					}
				}
			}
		}

		},
		"/styles/{id}": {
			"delete": {
				"tags": [
					"styles"
				],
				"summary": "Suppression d'un style.",
				"description": "Suppression d'un style en fonction de son id",
				"operationId": "deleteStyle",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "id du style à supprimer",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/styles/process": {
			"post": {
				"tags": [
					"styles"
				],
				"summary": "Création d'une liaison (avec les tasks de workflow) associé à ce style",
				"description": "",
				"operationId": "createProcessStyling",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "processStyle",
						"description": "Description de la liaison du style avec une task",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProcessStyling"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProcessStyling"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/styles/process/{id}": {
			"get": {
				"tags": [
					"styles"
				],
				"summary": "Récupération liaisons (avec les tasks de workflow) associé à ce style",
				"description": "",
				"operationId": "getStyleProcessById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "id du style dont les liaisons sont à récupérer",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcessStyling"
							}
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"styles"
				],
				"summary": "Suppression d'une liaison (avec les tasks de workflow) associé à ce style.",
				"description": "Suppression d'un ProcessStyling en fonction de son id",
				"operationId": "deleteProcessStyling",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "id du ProcessStyling à supprimer",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/user/me": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Récupération des données de l'utilisateur connecté",
				"description": "",
				"operationId": "getMe",
				"produces": [
					"application/json"
				],
				"parameters": [
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"user/contexts": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Récupération des contexts sur lesquels l'utilisateur connecté peut avoir des actions",
				"description": "",
				"operationId": "getVisibleContexts",
				"produces": [
					"application/json"
				],
				"parameters": [
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContextDescription"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/draft": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Création d'un signalement brouillon",
				"description": "",
				"operationId": "createDraft",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "reportingDescription",
						"description": "Description du signalement",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ReportingDescription"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/cancel/{uuid}": {
			"delete": {
				"tags": [
					"tasks"
				],
				"summary": "Abandon d'un signalement brouillon",
				"description": "",
				"operationId": "cancelDraft",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant du signalement",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/attachment/configuration": {
			"get": {
				"tags": [
					"reporting"
				],
				"summary": "Lister la configuration liées aux pièces jointes",
				"description": "Lister la configuration liées aux pièces jointes",
				"operationId": "getAttachmentConfiguration",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AttachmentConfiguration"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/contextDescription/search": {
			"get": {
				"tags": [
					"reporting",
					"contextDescriptions"
				],
				"summary": "Lister les contextes",
				"description": "Listes les contexts selon le type",
				"operationId": "searchContextDescriptions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "contextType",
						"description": "Type du context",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "geographicType",
						"description": "Type de sélection",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContextDescription"
							}
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/form/draft/{contextDescriptionName}": {
			"get": {
				"tags": [
					"reporting"
				],
				"summary": "Retourne le formulaire draft",
				"description": "Retourne le formulaire associé à l'état draft",
				"operationId": "lookupDrafForm",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "contextDescriptionName",
						"description": "Le nom du contexte, thème ou couche",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Form"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/{uuid}/upload": {
			"post": {
				"tags": [
					"reporting"
				],
				"summary": "Téléversement d'une pièce jointe sur un signalement",
				"description": "",
				"operationId": "uploadDocument",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant du signalement",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"in": "formData",
						"name": "file",
						"description": "Pièce jointe sous la forme d'un blob",
						"required": true,
						"type": "file"
					}
				],
				"consumes": [
					"multipart/form-data",
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/{uuid}/delete/{attachmentId}": {
			"delete": {
				"tags": [
					"reporting"
				],
				"summary": "Suppression d'un pièce jointe sur un signalement",
				"description": "",
				"operationId": "deleteDocument",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant du signalement",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"in": "path",
						"name": "attachmentId",
						"description": "Identifiant de l'attachement",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/reporting/{uuid}/download/{attachmentId}": {
			"get": {
				"tags": [
					"reporting"
				],
				"summary": "Téléchargement d'un pièce attachée à un signalement",
				"description": "",
				"operationId": "downloadDocument",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant du signalement",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"in": "path",
						"name": "attachmentId",
						"description": "Identifiant de l'attachement",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "file"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/start": {
			"post": {
				"tags": [
					"tasks"
				],
				"summary": "Démarrage du workflow de signalement",
				"description": "",
				"operationId": "startTask",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "task",
						"description": "Description du signalement",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/claim/{taskId}": {
			"put": {
				"tags": [
					"tasks"
				],
				"summary": "Demande d'affectation",
				"description": "",
				"operationId": "claimTask",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "taskId",
						"description": "Identifiant de la tâche associée",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/{taskId}": {
			"get": {
				"tags": [
					"tasks"
				],
				"summary": "Récupérer une tâche d'un signalement",
				"description": "",
				"operationId": "getTask",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "taskId",
						"description": "Identifiant de la tâche associée",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/update": {
			"put": {
				"tags": [
					"tasks"
				],
				"summary": "Mise à jour de la tâche du signalement",
				"description": "",
				"operationId": "updateTask",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "task",
						"description": "Description du signalement",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/do/{taskId}/{actionName}": {
			"put": {
				"tags": [
					"tasks"
				],
				"summary": "Demande de traitement",
				"description": "",
				"operationId": "doIt",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "taskId",
						"description": "Identifiant de la tâche associée",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "actionName",
						"description": "Nom de l'action",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/search": {
			"get": {
				"tags": [
					"tasks"
				],
				"summary": "Liste les tâches du user courant",
				"description": "Retourne la liste des tâches de l'utilisateur connecté",
				"operationId": "searchTasks",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "contextName",
						"description": "Nom du contexte pour filtrage. Pas de filtrage si null",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "contextType",
						"description": "Type du contexte pour filtrage",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "geographicType",
						"description": "Type géographique pour filtrage",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "asAdmin",
						"description": "En tant qu'administrateur. Faux par défaut",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Task"
							}
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/search/geojson": {
			"get": {
				"tags": [
					"tasks"
				],
				"summary": "Liste les tâches du user courant au format GeoJSon",
				"description": "Retourne la liste des tâches de l'utilisateur connecté au format GeoJSon",
				"operationId": "searchGeoJSonTasks",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "contextName",
						"description": "Nom du contexte pour filtrage",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "contextType",
						"description": "Type du contexte pour filtrage",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "geographicType",
						"description": "Type géographique pour filtrage",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "asAdmin",
						"description": "En tant qu'administrateur. Faux par défaut",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/FeatureCollection"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/task/geojson/properties": {
			"get": {
				"tags": [
					"tasks"
				],
				"summary": "Liste les description des propriétés disponibles dans le GeoJson",
				"description": "Retourne la description des propriétés disponibles dans une feature GeoJson. Si le contexte géographique n'est pas précisé, aucune propriété geometry n'est présente",
				"operationId": "getGeoJSonTaskProperties",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "contextName",
						"description": "Nom du contexte géographique",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/FeatureTypeDescription"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/contextDescriptions": {
			"get": {
				"tags": [
					"contextDescriptions"
				],
				"summary": "Liste les desctiptions de contexte disponibles.",
				"description": "Retourne la liste des desctiptions de contexte existantes",
				"operationId": "searchContextDescriptions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "description",
						"description": "Filtre de recherche sur la description",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "workflow",
						"description": "Filtre de recherche sur le workflow",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/ContextDescriptionPageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"contextDescriptions"
				],
				"summary": "Créer une desctiption de contexte.",
				"description": "Créer une desctiption de contexte telle que stipulée dans le body de la requête",
				"operationId": "createContextDescription",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "contextDescription",
						"description": "Description du contexte",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ContextDescription"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/ContextDescription"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"put": {
				"tags": [
					"contextDescriptions"
				],
				"summary": "Mise à jour d'une description de contexte.",
				"description": "Mise à jour d'une desctiption de contexte telle que stipulée dans le body de la requête, en fonction du nom de la description",
				"operationId": "updateContextDescription",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "contextDescription",
						"description": "Description du contexte",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ContextDescription"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/ContextDescription"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/contextDescriptions/{name}": {
			"get": {
				"tags": [
					"contextDescriptions"
				],
				"summary": "Récupération d'une description de contexte.",
				"description": "Récupération d'une desctiption de contexte en fonction de son nom",
				"operationId": "getContextDescription",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"description": "Nom de la description du contexte à récupérer",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/ContextDescription"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"contextDescriptions"
				],
				"summary": "Suppression d'une description de contexte.",
				"description": "Suppression d'une desctiption de contexte en fonction de son nom",
				"operationId": "deleteContextDescription",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"description": "Nom de la description du contexte à supprimer",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/roles": {
			"get": {
				"tags": [
					"roles"
				],
				"summary": "Récupération de la liste des rôles.",
				"description": "Récupération de la liste des rôles disponibles.",
				"operationId": "searchRoles",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/RolePageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"roles"
				],
				"summary": "Création d'un rôle.",
				"description": "Création d'un rôle.",
				"operationId": "createRole",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "role",
						"description": "Rôle à créer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Role"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/Role"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/roles/{name}": {
			"get": {
				"tags": [
					"roles"
				],
				"summary": "Récupération d'un rôle.",
				"description": "Récupération d'un rôle en fonction de son nom",
				"operationId": "getRole",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"description": "Nom du rôle à récupérer",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/Role"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"roles"
				],
				"summary": "Suppression d'un rôle.",
				"description": "Suppression d'un rôle en fonction de son nom",
				"operationId": "deleteRole",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"description": "Nom du rôle à supprimer",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographicareas": {
			"get": {
				"tags": [
					"geographicAreas"
				],
				"summary": "Récupération de la liste des zones géographiques disponibles",
				"description": "Récupération de la liste des zones géographiques disponibles, avec la possibilité de filtrer en fonction du nom",
				"operationId": "searchGeographicAreas",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"description": "Nom ou partie du nom pour filtrer",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer"
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/GeographicAreaPageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographicareas/{id}": {
			"get": {
				"tags": [
					"geographicAreas"
				],
				"summary": "Récupération d'une zones géographique",
				"description": "Récupération d'une zones géographique en fonction de son id",
				"operationId": "getGeographicArea",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Id de la zone géographique",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/GeographicArea"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Recherche de la liste des utilisateurs.",
				"description": "Récupération de la liste des utilisateurs disponibles qui respectent les filtres.",
				"operationId": "searchUsers",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "email",
						"description": "Filtre de recherche sur l'e-mail",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "loginUser",
						"description": "Filtre de recherche sur le login",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer",
						"default": 0
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer",
						"default": 10
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/UserPageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"user"
				],
				"summary": "Pré création d'un utilisateur.",
				"description": "Pré création d'un utilisateur.",
				"operationId": "createUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "user",
						"description": "Le User à précréé",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"201": {
						"description": "CREATED",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/users/{login}": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Récupération d'un utilisateur",
				"description": "Récupération d'un utilisateur en fonction de son login",
				"operationId": "getUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "login",
						"description": "Login de l'utilisateur'",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"user"
				],
				"summary": "Suppression d'un utilisateur",
				"description": "Suppression d'un utilisateur en fonction de son login",
				"operationId": "deleteUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "login",
						"description": "Login de l'utilisateur'",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/userRoleContexts": {
			"get": {
				"tags": [
					"userRoleContext"
				],
				"summary": "Recherche des userRoleContext",
				"description": "Récupération de la liste des userRoleContext disponibles qui respectent les filtres.",
				"operationId": "searchUserRoleContexts",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "userLogin",
						"description": "Filtre de recherche sur le user",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "roleName",
						"description": "Filtre de recherche sur le role",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "geographicAreaId",
						"description": "Filtre de recherche sur la zone géographique",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "query",
						"name": "contextDescriptionName",
						"description": "Filtre de recherche sur le contexte",
						"required": false,
						"type": "string",
						"default": ""
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"type": "integer",
						"default": 0
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"type": "integer",
						"default": 10
					},
					{
						"in": "query",
						"name": "sortExpression",
						"description": "Indications de tri",
						"required": false,
						"type": "string",
						"default": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/UserRoleContextPageResult"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"post": {
				"tags": [
					"userRoleContext"
				],
				"summary": "Création d'un opérateur.",
				"description": "Création d'un opérateur.",
				"operationId": "createUserRoleContext",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "user",
						"description": "Les infos sur le UserRoleContext à créer",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/UserRoleContext"
						}
					}
				],
				"responses": {
					"201": {
						"description": "CREATED",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/UserRoleContext"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/userRoleContexts/{id}": {
			"get": {
				"tags": [
					"userRoleContext"
				],
				"summary": "Récupération d'un opérateur",
				"description": "Récupération d'un opérateur en fonction de son id",
				"operationId": "getUserRoleContext",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "id de l'opérateur",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"$ref": "#/definitions/UserRoleContext"
						}
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"userRoleContext"
				],
				"summary": "Suppression d'un opérateur",
				"description": "Suppression d'un opérateur en fonction de son id",
				"operationId": "deleteUserRoleContext",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "id de l'opérateur",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "query",
						"name": "force",
						"description": "Force la suppression si l'opérateur a des signalements en cours",
						"required": false,
						"type": "boolean",
						"default": false
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad input parameter"
					},
					"404": {
						"description": "NOT FOUND"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"ApiError": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"label": {
					"type": "string"
				}
			}
		},
		"ConfigurationData": {
			"type": "object",
			"properties": {
				"version": {
					"type": "string"
				},
				"roleAdministrator": {
					"type": "string"
				}
			}
		},
		"PaginationCriteria": {
			"type": "object",
			"properties": {
				"offset": {
					"type": "integer",
					"format": "int32",
					"exemple": "0",
					"required": "true"
				},
				"limit": {
					"type": "integer",
					"format": "int32",
					"exemple": "0",
					"required": "true"
				}
			}
		},
		"SortCriterion": {
			"type": "object",
			"properties": {
				"property": {
					"type": "string",
					"exemple": "id",
					"required": "true"
				},
				"asc": {
					"type": "boolean",
					"exemple": "true",
					"required": "true"
				}
			}
		},
		"SortCriteria": {
			"type": "object",
			"properties": {
				"elements": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SortCriterion"
					}
				}
			}
		},
		"PointG": {
			"type": "object",
			"properties": {
				"x": {
					"type": "string"
				},
				"y": {
					"type": "string"
				}
			}
		},
		"GeographicType": {
			"type": "string",
			"description": "Type géographic",
			"enum": [
				"POINT",
				"LINE",
				"POLYGON"
			]
		},
		"ProcessDefinition": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"category": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"key": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int32"
				},
				"resourceName": {
					"type": "string"
				},
				"deploymentId": {
					"type": "string"
				},
				"diagramResourceName": {
					"type": "string"
				},
				"tenantId": {
					"type": "string"
				},
				"engineVersion": {
					"type": "string"
				}
			}
		},
		"ContextType": {
			"type": "string",
			"description": "Type du context du signalement",
			"enum": [
				"THEMA",
				"LAYER"
			]
		},
		"FieldType": {
			"type": "string",
			"description": "Type des champs",
			"enum": [
				"LONG",
				"DOUBLE",
				"STRING",
				"BOOLEAN",
				"DATE",
				"LIST"
			]
		},
		"ValidatorType": {
			"type": "string",
			"enum": [
				"REQUIRED",
				"MAXLENGTH",
				"POSITIVE",
				"NEGATIVE"
			]
		},
		"Validator": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/ValidatorType"
				},
				"attribute": {
					"type": "string"
				}
			}
		},
		"FieldDefinition": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"help": {
					"type": "string"
				},
				"type": {
					"type": "object",
					"$ref": "#/definitions/FieldType"
				},
				"readOnly": {
					"type": "boolean"
				},
				"required": {
					"type": "boolean"
				},
				"multiple": {
					"type": "boolean"
				},
				"extendedType": {
					"type": "string"
				},
				"validators": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Validator"
					}
				}
			}
		},
		"Field": {
			"type": "object",
			"properties": {
				"values": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"definition": {
					"type": "object",
					"$ref": "#/definitions/FieldDefinition"
				}
			}
		},
		"Section": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"fields": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/Field"
					}
				}
			}
		},
		"Form": {
			"type": "object",
			"properties": {
				"sections": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/Section"
					}
				}
			}
		},
		"ContextDescription": {
			"type": "object",
			"properties": {
				"contextType": {
					"type": "object",
					"$ref": "#/definitions/ContextType"
				},
				"geographicType": {
					"type": "object",
					"$ref": "#/definitions/GeographicType"
				},
				"name": {
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"processDefinitionKey": {
					"type": "string"
				},
				"revision": {
					"type": "integer"
				}
			}
		},
		"ContextDescriptionPageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/ContextDescription"
					}
				}
			}
		},
		"Status": {
			"type": "string",
			"description": "Etat d'un signalement",
			"enum": [
				"DRAFT",
				"PENDING",
				"CANCELLED",
				"COMPLETED",
				"DELETED"
			]
		},
		"Attachment": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"mimeType": {
					"type": "string"
				}
			}
		},
		"AttachmentConfiguration": {
			"type": "object",
			"properties": {
				"maxSize": {
					"type": "integer",
					"format": "int64"
				},
				"maxCount": {
					"type": "integer",
					"format": "int32"
				},
				"mimeTypes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"ReportingDescription": {
			"type": "object",
			"properties": {
				"functionalId": {
					"type": "integer",
					"format": "int64"
				},
				"uuid": {
					"type": "string",
					"format": "uuid"
				},
				"status": {
					"type": "object",
					"$ref": "#/definitions/Status"
				},
				"functionalStatus": {
					"type": "string"
				},
				"geographicType": {
					"type": "object",
					"$ref": "#/definitions/GeographicType"
				},
				"contextDescription": {
					"type": "object",
					"$ref": "#/definitions/ContextDescription"
				},
				"initiator": {
					"type": "string"
				},
				"creationDate": {
					"type": "string",
					"format": "date"
				},
				"updatedDate": {
					"type": "string",
					"format": "date"
				},
				"description": {
					"type": "string"
				},
				"assignee": {
					"type": "string"
				},
				"localisation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PointG"
					}
				},
				"attachments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Attachment"
					}
				},
				"datas": {
					"type": "object"
				}
			}
		},
		"Action": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"label": {
					"type": "string"
				}
			}
		},
		"User": {
			"type": "object",
			"properties": {
				"login": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"organization": {
					"type": "string"
				},
				"roles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"UserPageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/User"
					}
				}
			}
		},
		"Task": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"functionalId": {
					"type": "integer",
					"format": "int64"
				},
				"status": {
					"type": "object",
					"$ref": "#/definitions/Status"
				},
				"functionalStatus": {
					"type": "string"
				},
				"initiator": {
					"type": "string"
				},
				"creationDate": {
					"type": "string",
					"format": "date"
				},
				"updatedDate": {
					"type": "string",
					"format": "date"
				},
				"assignee": {
					"type": "string"
				},
				"actions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Action"
					}
				},
				"form": {
					"type": "object",
					"$ref": "#/definitions/Form"
				},
				"asset": {
					"type": "object",
					"$ref": "#/definitions/ReportingDescription"
				}
			}
		},
		"GeometryType": {
			"type": "string",
			"description": "the geometry type",
			"enum": [
				"Point",
				"LineString",
				"Polygon",
				"MultiPoint",
				"MultiLineString",
				"MultiPolygon"
			]
		},
		"Geometry": {
			"type": "object",
			"description": "GeoJSon geometry",
			"discriminator": "type",
			"properties": {
				"type": {
					"type": "object",
					"$ref": "#/definitions/GeometryType"
				}
			}
		},
		"Point2D": {
			"type": "array",
			"maxItems": 2,
			"minItems": 2,
			"items": {
				"type": "number"
			}
		},
		"Point": {
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type": "object",
					"properties": {
						"coordinates": {
							"$ref": "#/definitions/Point2D"
						}
					}
				}
			]
		},
		"LineString":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"$ref": "#/definitions/Point2D"
							}
						}
					}
				}
			]
		},
		"Polygon":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"$ref": "#/definitions/Point2D"
								}
							}
						}
					}
				}
			]
		},
		"MultiPoint":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"$ref": "#/definitions/Point2D"
							}
						}
					}
				}
			]
		},
		"MultiLineString":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"$ref": "#/definitions/Point2D"
								}
							}
						}
					}
				}
			]
		},
		"MultiPolygon":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"type": "array",
									"items": {
										"$ref": "#/definitions/Point2D"
									}
								}
							}
						}
					}
				}
			]
		},
		"GeometryCollection": {
			"type": "object",
			"description": "GeoJSon geometry collection",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"GeometryCollection"
					]
				},
				"geometries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Geometry"
					}
				}
			}
		},
		"Style": {
			"type": "object",
			"description": "GeoJSon feature style for frontend",
			"properties": {
				"color": {
					"type": "string"
				},
				"fillColor": {
					"type": "string"
				},
				"fillOpacity": {
					"type": "number",
					"format": "double"
				},
				"opacity": {
					"type": "number",
					"format": "double"
				},
				"iconColor": {
					"type": "string"
				},
				"iconGlyph": {
					"type": "string"
				},
				"iconShape": {
					"type": "string"
				},
				"weight": {
					"type": "number",
					"format": "double"
				},
				"geometry": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"iconAnchor": {
					"type": "array",
					"items":{
						"type": "number",
						"format": "double"
					}
				},
				"dashArray": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"filtering": {
					"type": "boolean"
				}
			}
		},
		"StyleContainer": {
			"type": "object",
			"description": "GeoJSon feature style which make easier to go from database to backend",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"type": {
					"type": "string",
					"$ref": "#/definitions/GeographicType"
				},
				"style": {
					"type": "object",
					"$ref": "#/definitions/Style"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"ProcessStyling": {
			"type": "object",
			"description": "Link between a user task and GeoJSon feature style",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"processDefinitionId": {
					"type": "string"
				},
				"revision": {
					"type": "integer"
				},
				"userTaskId": {
					"type": "string"
				},
				"stylingId": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"StylePageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/StyleContainer"
					}
				}
			}
		},
		"ProcessStylingPageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/ProcessStyling"
					}
				}
			}
		},
		"Feature": {
			"type": "object",
			"description": "GeoJSon feature",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"Feature"
					]
				},
				"id": {
					"type": "string",
					"format": "uuid"
				},
				"geometry": {
					"$ref": "#/definitions/Geometry"
				},
				"style": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Style"
					}
				},
				"properties": {
					"type": "object"
				}
			}
		},
		"FeatureCollection": {
			"type": "object",
			"description": "GeoJSon feature collection",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"FeatureCollection"
					]
				},
				"features": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"style": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Style"
					}
				}
			}
		},
		"FeatureProperty": {
			"type": "object",
			"description": "GeoJSon feature property description",
			"properties": {
				"name": {
					"type": "string"
				},
				"maxOccurs": {
					"type": "integer",
					"format": "int32"
				},
				"minOccurs": {
					"type": "integer",
					"format": "int32"
				},
				"nillable": {
					"type": "boolean"
				},
				"type": {
					"type": "string"
				},
				"localType": {
					"type": "string"
				}
			}
		},
		"FeatureType": {
			"type": "object",
			"description": "GeoJSon feature type",
			"properties": {
				"typeName": {
					"type": "string"
				},
				"properties": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FeatureProperty"
					}
				}
			}
		},
		"FeatureTypeDescription": {
			"type": "object",
			"description": "GeoJSon feature type description",
			"properties": {
				"elementFormDefault": {
					"type": "string"
				},
				"targetNamespace": {
					"type": "string"
				},
				"targetPrefix": {
					"type": "string"
				},
				"featureTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FeatureType"
					}
				}
			}
		},
		"GeographicArea": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"nom": {
					"type": "string"
				},
				"codeInsee": {
					"type": "string"
				}
			}
		},
		"GeographicAreaPageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/GeographicArea"
					}
				}
			}
		},
		"Role": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"label": {
					"type": "string"
				}
			}
		},
		"RolePageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/Role"
					}
				}
			}
		},
		"UserRoleContext": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"user": {
					"type": "object",
					"$ref": "#/definitions/User"
				},
				"role": {
					"type": "object",
					"$ref": "#/definitions/Role"
				},
				"contextDescription": {
					"type": "object",
					"$ref": "#/definitions/ContextDescription"
				},
				"geographicArea": {
					"type": "object",
					"$ref": "#/definitions/GeographicArea"
				}
			}
		},
		"UserRoleContextPageResult": {
			"type": "object",
			"properties": {
				"totalItems": {
					"type": "integer",
					"format": "int64"
				},
				"results": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/UserRoleContext"
					}
				}
			}
		}
	}
}
